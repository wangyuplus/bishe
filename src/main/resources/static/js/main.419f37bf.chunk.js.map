{"version":3,"sources":["static/logo.png","static/banner02.png","store/actionCreator.js","store/actionTypes.js","Components/RegisterAndLogin/Login.js","Components/RegisterAndLogin/Register.js","Components/RegisterAndLogin/LoginOrRegisterModal.js","Components/common/Header.js","Components/Home/RotationChart .js","Components/Home/Classification.js","Components/Home/SingleCard.js","Components/Home/SingleCardMain.js","Components/common/Footer.js","Page/Home.js","Components/common/CommonBanner.js","Components/ShoppingCart/SingleFoodlist.js","Components/ShoppingCart/ShoppingCartMain.js","Page/ShoppingCart.js","Components/ForgetPassword/ForgetPasswordMain.js","Page/ForgetPassword.js","Components/SingleFoodDetails/SingleFoodMessage.js","Page/SingleFoodDetails.js","Components/UserInformation/EditMeModal.js","Components/UserInformation/Me.js","Page/UserInformation.js","Components/GoodsPublish/EditPublishGoodsModal.js","Components/GoodsPublish/MyPublishOrder.js","Page/GoodsPublish.js","Components/AddNewGoods/AddNewGoodsContent.js","Page/AddNewGoods.js","App.js","store/reducer.js","store/index.js","index.js"],"names":["module","exports","history","createBrowserHistory","changeGetCodeBtnToTrue","type","loginSuccessSaveState","LoginSuccessObject","data","getAllCategories","dispatch","axios","method","headers","url","then","res","console","log","catch","error","message","getFirstPageGoods","goodsLength","length","getSelectKeyDishesList","dishesData","NormalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","toLogin","getFieldDecorator","this","className","onSubmit","Item","rules","required","size","placeholder","prefix","style","color","Password","to","onClick","cancelModal","htmlType","toRegisterMain","React","Component","WrappedNormalLoginForm","create","name","connect","LoginObject","username","password","Qs","stringify","code","success","sessionStorage","setItem","push","setTimeout","go","warning","actionCreators","state","userEmailInput","toRegister","allowBtnSend","errorReturnMessage","getFieldError","undefined","getFieldValue","allowSendCode","changeGetCodeBtnToFalse","getRegisterCode","pattern","suffix","title","ref","value","setState","disabled","toLoginMain","WrappedNormalRegisterForm","ownProps","get","email","RegisterObject","LoginOrRegisterModal","showRegisterMain","visible","modalVisible","onOk","handleOk","onCancel","handleCancel","footer","centered","showRegisterOrLoginMain","showModal","SubMenu","Header","handleClick","current","key","logout","toLogout","getItem","justify","xs","sm","md","lg","xl","alt","src","logo","offset","mode","userid","removeItem","RotationChart","pic","Classification","top","bottom","selectKey","item","children","changeHomeDishesList","homeCategoriesList","offsetTop","defaultSelectedKeys","defaultOpenKeys","ItemGroup","map","index","SingleCard","gid","addGoodsToShoppingCart","path","price","isLogin","addToShoppingCart","parseInt","sum","JSON","SingleCardMain","homeDishesList","totalPage","Footer","Home","CommonBanner","commonbannerTitle","SingleFoodlist","unitTotleValue","onChange","target","checked","changeMount","mountValue","changeShoppingCartGoodsMount","deleteShoppingCart","min","max","goodssum","defaultValue","shoppingsum","prop","mount","ShoppingCartMain","getMyShoppingCart","shoppingCartGoods","shoppingCartTotalPrice","singleMoney","parseFloat","ShoppingCart","ForgetPasswordMain","ForgetPassword","SingleFoodMessage","TextArea","goods","beizhu","SingleFoodDetails","match","params","showGoodsDetail","goodsDetails","EditMeMessageModal","meMessageEditModalState","cancelAddClassifyModal","labelCol","span","wrapperCol","editMeMessage","label","meMessage","phone","vx","qq","MeObj","meObj","newPassword","newVx","newQQ","newPhone","Me","me","showMeMessageEditModal","getMeMessage","status","UserInformation","DishesAddContent","fileListLength","beforeUploadMehtod","file","uploadProps","accept","action","listType","formItemLayout","editModalCancel","cancelPublishGoodsEditModal","publiseUserChooseGoodsGid","toEditGoods","info","showOrCancelMyPublishGoodsEditModal","width","valuepropname","extra","beforeUpload","UploadOutlined","DishesAddContentForm","addFormObj","goodsObject","goodsName","goodsType","goodsUnitPrice","goodsSum","goodsDescribe","dishPicture","response","MyPublishOrder","deleteGoodsItem","saveUserChooseEditGoodsGid","showPublishGoodsEditModal","minHeight","textAlign","myPublishGoodsList","editGoodsItem","marginRight","EditPublishGoodsModal","getMyPulishGoods","Array","isArray","GoodsPublish","toAddGoods","getDishesCategories","dishesCategoriesList","AddNewGoods","App","component","exact","render","defaultState","fromJS","isAdmin","token","adminSiderSelectedState","classifyAddModalShowOrCancel","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","set","merge","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.419f37bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e68702d0.png\";","module.exports = __webpack_public_path__ + \"static/media/banner02.d94a6897.png\";","import axios from 'axios';\nimport * as actionTypes from './actionTypes'\nimport { message } from 'antd';\nimport Qs from 'qs';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\nexport const showModal = () => ({\n    type: actionTypes.SHOW_MODAL\n});\nexport const welcomeSaveIsAdminToTrue = () => ({\n    type: actionTypes.WELCOME_IS_ADMIN_TO_TRUE\n})\nexport const welcomeSaveIsAdminToFalse = () => ({\n    type: actionTypes.WELCOME_IS_ADMIN_TO_FALSE\n})\nexport const cancelModal = () => ({\n    type: actionTypes.CANCEL_MODAL\n})\n// 模态框从登录变为注册\nexport const toRegisterMain = () => ({\n    type: actionTypes.TO_REGISTER_MAIN\n})\n// 模态框从注册变为登录\nexport const toLoginMain = () => ({\n    type: actionTypes.TO_LOGIN_MAIN\n})\n\n// 获取验证码button状态，从false改为true\n\nexport const changeGetCodeBtnToTrue = () => ({\n    type: actionTypes.CHANGE_GETCODE_BTN_TO_TRUE\n})\n\nexport const changeGetCodeBtnToFalse = () => ({\n    type: actionTypes.CHANGE_GETCODE_BTN_TO_FALSE\n})\n// 获取验证码接口\nexport const getRegisterCode = (email) => {\n    return (dispatch) => {\n        axios({\n            method: 'GET',\n            url: 'http://120.79.56.242:8081/api/getCode?email=' + email,\n        }).then((res) => {\n            message.success(res.data.message);\n        }).catch((error) => {\n            // console.log(error);\n            dispatch(changeGetCodeBtnToTrue)\n            message.error('失败,请稍后重试。', error);\n\n        })\n    }\n}\n// 注册\nexport const toRegister = (RegisterObject) => {\n    console.log(RegisterObject);\n\n    return (dispatch) => {\n        let data = RegisterObject;\n        // console.log(data)\n\n        axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/reg',\n            data: data\n        }).then((res) => {\n            if (res.data.code === 0) {\n                // 跳转到登录页\n                message.success(res.data.message);\n                dispatch(toLoginMain());\n            }else{\n                message.warning(res.data.message);\n            }\n        }).catch((error) => {\n            message.error('注册失败：', error);\n\n        })\n    }\n}\n\n\n// Paul-eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJQYXVsIiwic3ViIjoibGVvbkBob29jLnRvcCIsImp0aSI6IjIiLCJleHAiOjE1ODI5ODQxNjd9.LYi3-ZFmvmpGFWU5TXJjOUP-K9M4qRaxUGg2bXwaMOQRhoKWVz82a1inA-3PykpgSrjOiaOHvM2HPeBye-2uaw\n// 登录\n// export const toLogin = (LoginObject)=>{\n\n//     return (dispatch) => {\n\n\n//         axios({\n//             method:'post',\n//             headers: {\n//                 'Content-Type': 'application/x-www-form-urlencoded',\n//                 'Authority':'Paul-eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJQYXVsIiwic3ViIjoibGVvbkBob29jLnRvcCIsImp0aSI6IjIiLCJleHAiOjE1ODI5ODQxNjd9.LYi3-ZFmvmpGFWU5TXJjOUP-K9M4qRaxUGg2bXwaMOQRhoKWVz82a1inA-3PykpgSrjOiaOHvM2HPeBye-2uaw'\n\n//             },\n//             url:'/api/m/mealKind/酒水饮品',\n\n//         }).then((res)=>{\n//             console.log(res.data);\n\n\n\n//         }).catch((error)=>{\n//             message.error('登录失败：',error);\n//         })\n//     }\n// }\n\n// 登录  --------------------------------------------------------------------\nexport const toLogin = (LoginObject) => {\n    // console.log('actioncreateorLogin');\n    // console.log(LoginObject);\n    return (dispatch) => {\n        let data = LoginObject;\n        console.log(data.username);\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            url: 'http://120.79.56.242:8081/api/login?username=' + LoginObject.username + '&password=' + LoginObject.password,\n            data: Qs.stringify(data)\n        }).then((res) => {\n            console.log(res);\n\n            if (res.data.code === 0) {\n                console.log(res.data)\n                message.success('登录成功');\n                dispatch(loginSuccessSaveState(res.data.data));\n                // 登录成功保存状态和token到sessionStroge\n                sessionStorage.setItem('isLogin', res.data.data);\n                //跳转到主页\n                    history.push('/#/');\n                    setTimeout(() => history.go(), 1600);\n            \n                dispatch(cancelModal());\n            } else {\n                message.warning(res.data.message);\n            }\n\n        }).catch((error) => {\n            message.error('登录失败：', error);\n        })\n    }\n}\n// 登录成功保存状态\nexport const loginSuccessSaveState = (LoginSuccessObject) => ({\n    type: actionTypes.LOGIN_SUCCESS_SAVE_STATE,\n    data: LoginSuccessObject\n})\n\n// 登出\nexport const logoutDispatch = () => ({\n    type: actionTypes.TO_LOGIN_OUT\n})\n\nexport const logout = () => {\n    const userid = sessionStorage.getItem('isLogin');\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/logout?username='+userid,\n        }).then((res) => {\n            sessionStorage.removeItem(\"isLogin\");\n            dispatch(logoutDispatch());\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\nexport const getAllCategoriesList = (categoriesData) => ({\n    type: actionTypes.GET_ALL_CATEGORIES,\n    data: categoriesData\n})\n\n//获得主页菜品分类列表  ---------------------------------------------------------\n\nexport const getAllCategories = () => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/getGoodsType',\n        }).then((res) => {\n            console.log(res);\n            dispatch(getAllCategoriesList(res.data));\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n//改变管理sider的选择状态\nexport const changeSiderSelectState = (key) => ({\n    type: actionTypes.CHANGE_ADMIN_SIDER_STATE,\n    data: key\n})\n\n//显示addClissifyContent Modal\nexport const classifyShowAddModal = () => ({\n    type: actionTypes.CLASSIFY_SHOW_ADD_MODAL\n})\n\nexport const classifyCancelAddModal = () => ({\n    type: actionTypes.CLASSIFY_CANCEL_ADD_MODAL\n})\n\n\n\n\n\n\n\n\n\n\n// 前台用户部分\n\n\n\n\n\n\n\n// 获取用户信息\nexport const saveMeMessage = (meData) => ({\n    type: actionTypes.GET_ME_MESSAGE,\n    data: meData\n})\nexport const getMeMessage = () => {\n    const userid = sessionStorage.getItem('isLogin');\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/findUser?username=' + userid,\n        }).then((res) => {\n           console.log(res);\n           if(res.data.status === 1){\n            dispatch(saveMeMessage(res.data));\n           }else{\n               message.warning('警告')\n           }\n\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n\n// 显示用户编辑Modal框  ---------------------------------------------------\n\n\nexport const showMeMessageEditModal = () => ({\n    type: actionTypes.SHOW_ME_MESSAGE_EDIT_MODAL,\n})\n\n//隐藏\nexport const cancelMeMessageEditModal = () => ({\n    type: actionTypes.CANCAL_ME_MESSAGE_EDIT_MODAL,\n})\n\n\n\n//编辑个人信息\nexport const editMeMessage = (meObj) => {\n    const userid = sessionStorage.getItem('isLogin');\n    return (dispatch) => {\n        let data = {\n            username: userid,\n            password: meObj.newPassword,\n            vx: meObj.newVx,\n            qq: meObj.newQQ,\n            phone:meObj.newPhone ,\n        };\n        // console.log('actionCreator data',data); \n        axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/updateUser' ,\n            data: data\n        }).then((res) => {\n            if(res.data.code === 1){\n                message.success(res.data.message);\n                history.push('/#/me');\n                setTimeout(() => history.go(), 1600);\n            }else{\n                message.success(res.data.message);\n            }\n            console.log(res);\n\n        }).catch((error) => {\n            message.error('更改个人信息失败：', error);\n        })\n    }\n}\n\n/**\n *    我的发布页面\n *    相关接口：查询我发布的商品\n *             增加发布的商品\n *             更新发布的商品\n *             删除发布的商品\n */\n\n\n//查询我发布的商品\nexport const getMyPulishGoodsSave = (data) => ({\n    type: actionTypes.MY_PUBLISH_GOODS,\n    data:data\n})\n\nexport const getMyPulishGoods = () => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/findMyGoods',\n        }).then((res) => {\n            if(Array.isArray(res.data)){\n                   dispatch(getMyPulishGoodsSave(res.data));\n            }\n           console.log(res);\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n//增加我发布的商品\nexport const addGoods = (goodsObject) => {\n    console.log(goodsObject);\n    \n    return (dispatch) => {\n        let data = {\n            name: goodsObject.goodsName,\n            type: goodsObject.goodsType,\n            price: parseFloat(goodsObject.goodsUnitPrice) ,\n            sum: parseInt(goodsObject.goodsSum),\n            beizhu: goodsObject.goodsDescribe,\n            path:goodsObject.dishPicture.file.response,\n        }\n        // console.log('actionCreator data',data);\n\n\n\n        axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/addGoods',\n            data: data\n        }).then((res) => {\n            console.log(res);\n            \n            if (res.data === \"success\") {\n                message.success('增加我的发布商品成功');\n                history.push('/#/publish');\n                setTimeout(() => history.go(), 1600);\n            } else {\n                message.warning(res.data.message);\n            }\n\n        }).catch((error) => {\n            message.error('增加商品失败：', error);\n        })\n    }\n}\n\n//删除我发布的商品\n\n\nexport const deleteGoodsItem = (gid) => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/deleteGoodsByGid?gid='+gid,\n        }).then((res) => {\n            if(res.data.code === 1){\n                message.success(res.data.message);\n                history.push('/#/publish');\n                setTimeout(() => history.go(), 1600);\n            }\n        //    console.log(res);\n        }).catch((error) => {\n            message.error('删除失败：', error);\n        })\n    }\n}\n//当用户点击我的发布的商品编辑时，保存商品gid\nexport const saveUserChooseEditGoodsGid = (gid) => ({\n    type: actionTypes.SAVE_USER_CHOOSE_EDIT_GOODS_GID,\n    data: gid\n})\n\n//显示或关闭我发布商品的编辑modal框\nexport const showPublishGoodsEditModal = () => ({\n    type: actionTypes.SHOW_PUBLISH_GOODS_EDIT_MODAL,\n})\n\n//隐藏\nexport const cancelPublishGoodsEditModal = () => ({\n    type: actionTypes.CANCEL_PUBLISH_GOODS_EDIT_MODAL,\n})\n\n//编辑我发布的商品\nexport const editGoodsItem = (gid) => {\n    // return (dispatch) => {\n    //     axios({\n    //         method: 'get',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         url: '/api/deleteGoodsByGid?gid='+gid,\n    //     }).then((res) => {\n    //         if(res.data.code === 1){\n    //             message.success(res.data.message)\n    //         }\n    //     //    console.log(res);\n    //     }).catch((error) => {\n    //         message.error('删除失败：', error);\n    //     })\n    // }\n}\n\n//增加我发布的商品\nexport const editPublishGoods = (goodsObject,gid) => {\n    console.log(goodsObject);\n    \n    return (dispatch) => {\n        let data = {\n            gid: gid,\n            name: goodsObject.goodsName,\n            type: goodsObject.goodsType,\n            price: parseFloat(goodsObject.goodsUnitPrice) ,\n            sum: parseInt(goodsObject.goodsSum),\n            beizhu: goodsObject.goodsDescribe,\n            path:goodsObject.dishPicture.file.response,\n        }\n\n\n        axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/updateGoods',\n            data: data\n        }).then((res) => {\n            console.log(res);\n            \n            if (res.data === \"success\") {\n                message.success('编辑我的发布商品'+gid+'成功');\n                history.push('/#/publish');\n                setTimeout(() => history.go(), 1600);\n            } else {\n                message.warning(res.data.message);\n            }\n\n        }).catch((error) => {\n            message.error('编辑商品失败：', error);\n        })\n    }\n}\n\n\n//获取全部商品\n//保存总页数，分页用\nexport const saveTotalMount = (totalPage) => ({\n    type: actionTypes.TOTAL_PAGE,\n    data: totalPage\n})\nexport const getFirstPageGoods = () => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/getGoods?page=1',\n        }).then((res) => {\n            const goodsLength = res.data.length ;\n            dispatch(saveTotalMount(goodsLength))\n            dispatch(getSelectKeyDishesList(res.data));\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n\n//根据用户选择的id去更改渲染home商品列表\n//将拿到的菜品列表放到仓库中\nexport const getSelectKeyDishesList = (dishesData) => ({\n    type: actionTypes.HOME_DISHES_LIST,\n    data: dishesData\n})\n\nexport const changeHomeDishesList = (selectKey) => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/getGoodsByType?type='+selectKey+'&page=1' ,\n        }).then((res) => {\n            console.log(res);\n            dispatch(getSelectKeyDishesList(res.data));\n\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n//获取购物车的物品 保存到reducer\nexport const shoppingCartGoods = (dishesData) => ({\n    type: actionTypes.SHOPPING_CART_GOODS,\n    data: dishesData\n})\nexport const shoppingCartTotalPrice = (price) => ({\n    type: actionTypes.SHOPPING_CART_TOTAL_PRICE,\n    data: price\n})\nexport const getMyShoppingCart = () => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/getshop' ,\n        }).then((res) => {\n            // console.log(res);\n            //计算总费用\n            let sum = 0;\n            res.data.map((item,index)=>{\n                const singleMoney = parseFloat(item.price) * parseInt(item.shoppingsum);\n                sum = singleMoney + sum\n                return sum\n            })\n            dispatch(shoppingCartTotalPrice(sum))\n            dispatch(shoppingCartGoods(res.data));\n\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n//获取商品细节\n// showGoodsDetail\n\nexport const showGoodsDetailSave = (goodsData) => ({\n    type: actionTypes.GOODS_DETAILS,\n    data: goodsData\n})\nexport const showGoodsDetail = (gid) => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/getGoodsById?gid='+gid ,\n        }).then((res) => {\n            console.log(res);\n            dispatch(showGoodsDetailSave(res.data));\n\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n//加入商品到购物车\nexport const addGoodsToShoppingCart = (gid) => {\n    let data = {\n        gid: parseInt(gid),\n        sum: parseInt(1)\n    }\n    return (dispatch) => {\n        axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8',\n            },\n            url: 'http://120.79.56.242:8081/api/addShopping' ,\n            data:JSON.stringify(data) ,\n        }).then((res) => {\n            message.success('添加到购物车成功')\n\n        }).catch((error) => {\n            message.error('获取失败：', error);\n        })\n    }\n}\n\n//把商品从购物车删除\nexport const deleteShoppingCart = (gid) => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8',\n            },\n            url: 'http://120.79.56.242:8081/api/deleteShopById?gid='+gid,\n        }).then((res) => {\n            message.success('删除购物车商品成功');\n            history.push('http://120.79.56.242:8081/#/shoppingcart');\n            setTimeout(() => history.go(), 1000);\n\n        }).catch((error) => {\n            message.error('删除购物车商品失败', error);\n        })\n    }\n}\n\n//更新购物车商品的数量\n\nexport const changeShoppingCartGoodsMount = (mount,gid) => {\n    return (dispatch) => {\n        axios({\n            method: 'get',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            url: 'http://120.79.56.242:8081/api/updateShoppingSum?gid='+gid+'&sum='+mount,\n        }).then((res) => {\n            console.log(res);\n            if(res.data === 'success'){\n                message.success('更新购物车商品成功');\n                history.push('/#/shoppingcart');\n                setTimeout(() => history.go(), 800);\n            }\n            // message.success('删除购物车商品成功');\n            // history.push('/#/shoppingcart');\n            // setTimeout(() => history.go(), 1000);\n\n        }).catch((error) => {\n            message.error('更新商品数量失败', error);\n        })\n    }\n}","export const WELCOME_IS_ADMIN_TO_TRUE = 'welcome_is_admin_to_true';\nexport const WELCOME_IS_ADMIN_TO_FALSE = 'welcome_is_admin_to_false';\nexport const SHOW_MODAL = 'show_modal';\nexport const CANCEL_MODAL = 'cancel_modal';\nexport const TO_REGISTER_MAIN='to_register_main';\nexport const TO_LOGIN_MAIN = 'to_login_main';\nexport const CHANGE_GETCODE_BTN_TO_TRUE= 'change_getcode_btn_to_true';\nexport const CHANGE_GETCODE_BTN_TO_FALSE= 'change_getcode_btn_to_false';\nexport const LOGIN_SUCCESS_SAVE_STATE = 'login_success_save_state';\nexport const GET_ALL_CATEGORIES = 'get_all_categories';\nexport const TO_LOGIN_OUT = 'toLogout';\nexport const CHANGE_ADMIN_SIDER_STATE='change_admin_sider_state';\nexport const GET_RESPONSE_PIC_URL = 'get_response_pic_url';\nexport const CLASSIFY_SHOW_ADD_MODAL =  'classify_show_add_modal';\nexport const CLASSIFY_CANCEL_ADD_MODAL =  'classify_cancel_add_modal';\n//删除一个菜品\nexport const DELETE_DISH_BY_ID =  'delete_dish_by_id';\n\n//用户部分\nexport const HOME_DISHES_LIST = 'home_dishes_list';\n// 获取当前用户信息\nexport const GET_ME_MESSAGE = 'get_me_message';\n// 显示用户编辑Modal框 \nexport const SHOW_ME_MESSAGE_EDIT_MODAL = 'show_me_message_edit_modal' \n//关闭\nexport const CANCAL_ME_MESSAGE_EDIT_MODAL = 'cancel_me_message_edit_modal' \n//我发布的商品\nexport const MY_PUBLISH_GOODS = 'my_publish_goods'\n//显示或关闭我发布的商品Modal\nexport const SHOW_PUBLISH_GOODS_EDIT_MODAL = 'show_publish_goods_edit_modal'\nexport const CANCEL_PUBLISH_GOODS_EDIT_MODAL = 'cancel_publish_goods_edit_modal'\n//当用户点击我的发布的商品编辑时，保存商品gid\nexport const SAVE_USER_CHOOSE_EDIT_GOODS_GID = 'save_user_choose_edit_goods_gid'\n//保存总页数\nexport const TOTAL_PAGE = 'total_page'\n//获取购物车商品\nexport const SHOPPING_CART_GOODS = 'shopping_cart_goods'\n//获取商品详情\nexport const GOODS_DETAILS = 'goods_details'\n//购物车总费用\nexport const SHOPPING_CART_TOTAL_PRICE = 'shopping_cart_total_price'","import React from 'react'\nimport { Form, Icon, Input, Button } from 'antd';\nimport './Login.css';\nimport {connect}　from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\nimport { Link } from 'react-router-dom';\n\nclass NormalLoginForm extends React.Component {\n    handleSubmit = e => {\n        \n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                this.props.toLogin(values);\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"Login_main\">\n\n            <div className=\"Login_title\">登　录</div>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [\n                                { required: true, message: '邮箱不能为空' }],\n                    })(\n                        // 登录\n                        <Input\n                            size=\"large\"\n                            placeholder=\"请输入你的用户名\"\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            \n                        />\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: '密码不能为空' }],\n                    })(\n                        // 密码\n                        <Input.Password size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\"  />\n                    )}\n                </Form.Item>\n                <Form.Item>\n                <Link to=\"/u/forget\"><div　onClick={()=>this.props.cancelModal()} className=\"forget_password\">忘记密码</div></Link>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                       登　录\n                    </Button>\n                    <div className=\"to_register\" onClick={this.props.toRegisterMain}>立即注册</div>\n                </Form.Item>\n            </Form>\n            </div>\n        );\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toRegisterMain: () => {\n            dispatch(actionCreators.toRegisterMain())\n        },\n        toLogin: (LoginObject)=>{\n            dispatch(actionCreators.toLogin(LoginObject))\n        },\n        //忘记密码点击执行\n        cancelModal:()=>{\n            dispatch(actionCreators.cancelModal());\n        }\n    }\n}\nexport default connect(null,mapDispatchToProps)(WrappedNormalLoginForm) ;","import React from 'react'\nimport { Form, Icon, Input, Button, Tooltip,message } from 'antd';\nimport './Register.css';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\n\nclass NormalLoginForm extends React.Component {\n    state = {\n        userEmailInput:'',\n    }\n    // 表单提交前校验\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n               \n                // console.log('Received values of form: ', values);\n                this.props.toRegister(values);\n            }\n        });\n    };\n\n    allowBtnSend = e => {\n        // console.log(this.props.form.getFieldError('email'))\n        // 通过查询antd官方API发现this.props.form有getFieldError属性，可以获取到错误，从而判断，邮箱栏未输入正确的情况下不可以执行获取验证码\n        let errorReturnMessage = this.props.form.getFieldError('email');\n        // 通过getFieldValue获取初始值\n        let isEmptyMail = this.props.form.getFieldValue('email');\n        if(isEmptyMail === undefined){\n            message.warning('请填写正确的注册邮箱');\n        }else{\n            if(errorReturnMessage === undefined){\n                if(this.props.allowSendCode){\n                    this.props.changeGetCodeBtnToFalse()\n                    this.props.getRegisterCode(this.state.userEmailInput)\n                    setTimeout(()=>{\n                        this.props.changeGetCodeBtnToTrue()\n                    },10000)\n                }else{\n                    message.warning('频率过快，请一分钟后重新发送！');\n                }\n            }else{\n                message.error(errorReturnMessage);\n            }\n        }\n\n    }\n\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div className=\"Register_main\">\n\n                <div className=\"Register_title\">注 册</div>\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                    <Form.Item>\n                        {getFieldDecorator('email', {\n                            rules: [{ pattern: '^\\\\s*\\\\w+(?:\\\\.{0,1}[\\\\w-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*\\\\.[a-zA-Z]+\\\\s*$', message: '请输入正确的邮箱!' }\n                                    ,{ required: true, message: '注册邮箱不能为空' }],\n                        })(\n                            // 登录\n                            <Input\n                                size=\"large\"\n                                placeholder=\"请输入你的注册邮箱\"\n                                prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                suffix={\n                                    <Tooltip title=\"请输入正确格式的注册帐号\">\n                                        <Icon type=\"info-circle\" style={{ color: 'rgba(0,0,0,.45)' }} />\n                                    </Tooltip>\n                                }\n                                ref={(value)=>{this.setState({userEmailInput:value})}}\n                            />\n                        )}\n                    </Form.Item>\n\n\n                    <Form.Item>\n                        {getFieldDecorator('username', {\n                            rules: [{ required: true, message: '昵称不能为空' }],\n                        })(\n                            // 昵称\n                            <Input\n                                size=\"large\"\n                                placeholder=\"请输入你的昵称\"\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                suffix={\n                                    <Tooltip title=\"该昵称不可作为登录名\">\n                                        <Icon type=\"info-circle\" style={{ color: 'rgba(0,0,0,.45)' }} />\n                                    </Tooltip>\n                                }\n                            />\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, message: '密码不能为空' }],\n                        })(\n                            // 密码\n                            <Input.Password size=\"large\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\" />\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('code', {\n                            rules: [{ required: true, message: '验证码不能为空' }],\n                        })(\n                            // 验证码\n                            <div>\n                                <span className=\"register_code\">\n                                <Input\n                                    size=\"large\"\n                                    placeholder=\"请输入你的验证码\"\n                                    prefix={<Icon type=\"number\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    suffix={null}\n                                />\n                                </span>\n                                <span className=\"register_btn\">\n                                    {\n                                        this.props.allowSendCode ?  <Button onClick={this.allowBtnSend} >获取验证码</Button> \n                                        : <Button disabled>获取验证码</Button>\n                                    }\n                                   \n                                </span>\n                            </div>\n\n                        )}\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            注　册\n                        </Button>\n                        <div className=\"to_register\" onClick={this.props.toLoginMain}>立即登录</div>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n\n    }\n}\n\nconst WrappedNormalRegisterForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        allowSendCode: state.get('allowSendCode')\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toLoginMain: () => {\n            dispatch(actionCreators.toLoginMain())\n        },\n        getRegisterCode:(value)=>{\n            // console.log(value.props.value)\n            let email = value.props.value;\n            dispatch(actionCreators.getRegisterCode(email))\n        },\n        // 改变获取验证码按钮的状态\n        changeGetCodeBtnToTrue:()=>{\n            dispatch(actionCreators.changeGetCodeBtnToTrue())\n        },\n        changeGetCodeBtnToFalse:()=>{\n            dispatch(actionCreators.changeGetCodeBtnToFalse())\n        },\n        toRegister:(RegisterObject)=>{\n            // console.log(RegisterObject);\n            dispatch(actionCreators.toRegister(RegisterObject))\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalRegisterForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\nimport { Modal } from 'antd';\n// import './LoginOrRegister.css';\nimport Login from './Login';\nimport Register from './Register';\nclass LoginOrRegisterModal extends Component {\n    state = { showRegisterMain: false }\n\n    toRegisterMain = () => {\n        this.setState({\n            showRegisterMain: true\n        })\n    }\n    toLoginMain =()=>{\n        this.setState({\n            showRegisterMain:false\n        })\n    }\n    render() {\n        return (\n            <>\n                <div>\n                    <Modal\n                        title=\"登录 / 注册\"\n                        visible={this.props.modalVisible}\n                        onOk={this.props.handleOk}\n                        onCancel={this.props.handleCancel}\n                        footer={null}\n                        centered={true}\n                    >\n                        {!this.props.showRegisterOrLoginMain ? <Login/>: <Register/>}\n                    </Modal>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        modalVisible: state.get('modalVisible'),\n        showRegisterOrLoginMain:state.get('showRegisterOrLoginMain')\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        showModal: () => {\n            dispatch(actionCreators.showModal())\n        },\n        handleCancel: () => {\n            dispatch(actionCreators.cancelModal())\n        },\n        handleOk: () => {\n            dispatch(actionCreators.cancelModal())\n        }\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginOrRegisterModal);","import React, { Component } from 'react';\nimport { Row, Col, Icon ,Menu, message,Affix} from 'antd';\nimport './Header.css';\nimport logo from '../../static/logo.png';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\nimport LoginOrRegisterModal from '../RegisterAndLogin/LoginOrRegisterModal';\nimport { Link } from 'react-router-dom';\nimport { createBrowserHistory } from 'history'; \n\nconst { SubMenu } = Menu;\nclass Header extends Component {\n    \n    handleClick = e => {\n        // console.log('click ', e);\n        this.setState({\n          current: e.key,\n        });\n      };\n      logout = ()=>{\n        const history = createBrowserHistory();\n        \n        this.props.toLogout();\n        if(sessionStorage.getItem('isLogin')!== 'true'){\n            // history.push('/#/');\n            setTimeout( ()=>  history.go(),1600);\n            message.success('登出成功');\n        } \n      }\n\n    render() {\n        return (\n            <>\n            <Affix>\n  \n                <div className=\"Header_header\">\n                    {/* 采用antd栅格布局 */}\n                    <Row type=\"flex\" justify=\"center\" >\n\n                        {/* banner栏 */}\n                        <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                            {/* 内容部分 */}\n                            <div className=\"Header_header_inner\">\n                                {/* logo */}\n                                <Col xs={4} sm={4} md={4} lg={4} xl={4}>\n                                    <Link to=\"/\">\n                                        <span className=\"inner_logo\">\n                                            <img alt=\"\" src={logo}></img>\n                                        </span>\n                                    </Link>\n                                    \n                                </Col>\n                                {/* 用户按钮 */}\n                                <div className=\"inner_part\">\n                                <Col offset={8} xs={12} sm={12} md={12} lg={12} xl={12} justify=\"end\">\n                                <Menu onClick={this.handleClick}  mode=\"horizontal\"　style={{\"borderBottom\": \"none\",\"display\":\"flex\",\"flexDirection\": \"row-reverse\"}}>\n                                 \n                                    {\n                                    sessionStorage.getItem('isLogin')===false ||sessionStorage.getItem('isLogin')=== null  ?\n\n                                    <Menu.Item key=\"loginOrRegister\">\n                                    <a onClick={()=>this.props.showModal()}>\n                                    <span className=\"inner_userBtn\">\n                                        <Icon type=\"login\" />　登录 / 注册\n                                        </span>\n                                    </a>\n                                    </Menu.Item>\n                                    :\n\n                                    <SubMenu\n                                    title={\n                                        <div>\n                                            <Icon type=\"user\" /> 我　的\n                                        </div>\n                                    }\n                                    >\n                                    {/* <Menu.ItemGroup> */}\n                                        <Menu.Item key=\"setting:3\"><Link to=\"/me\">我的主页</Link></Menu.Item>\n                                        <Menu.Item key=\"setting:4\"><Link to=\"/publish\">我的发布</Link></Menu.Item>\n                                        <Menu.Item key=\"setting:5\"><a onClick={()=>this.logout()}>退出登录</a></Menu.Item>\n                                    {/* </Menu.ItemGroup> */}\n                                    </SubMenu>\n                                    }\n                                    \n                                    <SubMenu\n                                    title={\n                                        <Link to=\"/shoppingcart\">\n                                        <span className=\"inner_userBtn\">\n                                            <Icon type=\"shopping-cart\" /> 购物车\n                                        </span>\n                                        </Link>\n                                    }\n                                    >\n                                    {/* <Menu.ItemGroup> */}\n                                        {/* <Menu.Item key=\"setting:1\"><Link to=\"/u/shoppingcart\">我的购物车</Link></Menu.Item> */}\n                                        {/* <Menu.Item key=\"setting:2\">我购买的商品</Menu.Item> */}\n                                    {/* </Menu.ItemGroup> */}\n                                   \n                                    </SubMenu>\n\n                                    <SubMenu\n                                    title={\n                                        <Link to=\"/\">\n                                        <span className=\"inner_userBtn\">\n                                            <Icon type=\"home\" /> 主页\n                                        </span>\n                                        </Link>\n                                    }\n                                    >\n                                   \n                                    </SubMenu>\n\n                                  \n                                </Menu>\n                                {/* 通过this.props.showModal进行显示Modal */}\n                                {this.props.modalVisible? <LoginOrRegisterModal /> : ''}\n                                   \n                                </Col>\n                                </div>\n\n\n                            </div>\n\n\n                        </Col>\n                    </Row>\n                </div>\n              \n                </Affix>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        modalVisible: state.get('modalVisible')\n    }\n}\n\nconst mapDispatchToProps = (dispatch,ownProps) => {\n    return {\n        showModal(){\n            dispatch(actionCreators.showModal())\n        },\n        toLogout(){\n            dispatch(actionCreators.logout())\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);","import React, { Component } from 'react';\nimport pic from '../../static/banner02.png';\nimport './RotationChart.css';\n\nclass RotationChart  extends Component {\n\n    render() {\n        return (\n            <>\n                <div className=\"rotationChartMain\">\n                <img src={pic} alt=\"\"></img>\n                </div>\n               \n            </>\n        )\n    }\n}\n\nexport default RotationChart;","import React, { Component } from 'react'\nimport './Classification.css';\nimport { Menu, Affix } from 'antd';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\n\nclass Classification extends Component {\n    state = {\n        top: 100,\n        bottom: 10,\n      };\n    \n    handleClick = e => {\n        const selectKey = e.item.props.children\n        // console.log(selectKey)\n        if(selectKey === '全部商品'){\n            this.props.getFirstPageGoods()\n        }else{\n            this.props.changeHomeDishesList(selectKey)\n        }\n        // console.log('click ', selectKey);\n       \n      };\n    render() {\n\n        const data = this.props.homeCategoriesList;\n        \n        \n        return (\n            <>\n              <Affix offsetTop={this.state.top}>\n                <div className=\"classification_content\">\n                    <div className=\"classification_area\">\n                  \n                    <Menu\n                            onClick={this.handleClick}\n                            defaultSelectedKeys={['all']}\n                            defaultOpenKeys={['sub1']}\n                            mode=\"inline\"\n                        >\n                              \n                                <Menu.ItemGroup key=\"g1\" title=\"\">\n                                    <Menu.Item key=\"all\">全部商品</Menu.Item>\n                                    {\n                                        data.map((item,index)=>{\n                                        return <Menu.Item key={index}>{item}</Menu.Item>\n                                        })\n                                    }\n                                    \n                                </Menu.ItemGroup>\n                             \n                        </Menu>\n                    </div>\n                </div>\n                </Affix>\n            </>\n        )\n    }\n\n    componentDidMount(){\n        this.props.getAllCategories();\n      \n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        homeCategoriesList: state.get('dishesCategoriesList')\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        getAllCategories: () => {\n            dispatch(actionCreators.getAllCategories())\n        },\n        getFirstPageGoods:() => {\n            dispatch(actionCreators.getFirstPageGoods())\n        },\n        changeHomeDishesList:(selectKey) => {\n            dispatch(actionCreators.changeHomeDishesList(selectKey))\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (Classification);","import React, { Component } from 'react'\nimport './SingleCard.css';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\nclass SingleCard extends Component {\n    addToShoppingCart(gid){\n        console.log('addToShoppingCart gid'+gid);\n        this.props.addGoodsToShoppingCart(gid)\n    }\n    render() {\n        return (\n            <>\n                {/* 一个卡片菜品 */}\n                <div className=\"singlecard\">\n\n                    {/* 图片区域 */}\n                    <div className=\"singlecard_pic\">\n                        <img src={\"http://120.79.56.242:8080/\"+this.props.item.path}/>\n                    </div>\n                    {/* 价格，数量区域 */}\n                    <div className=\"singlecard_content\">\n                        <div className=\"food_name\"><span>{this.props.item.name}</span></div>\n                        <div className=\"food_message\">\n                            <span className=\"food_price\">￥<span>{this.props.item.price}</span> </span>\n\n                            <span className=\"food_order\">\n                                <Link to={`/foodDetail/${this.props.item.gid}`}><Button>详情</Button></Link>\n                                {\n                                    this.props.isLogin === true || sessionStorage.getItem('isLogin') != null ?\n                                    <Button type=\"primary\" onClick={()=>this.addToShoppingCart(this.props.item.gid)}>加入购物车</Button>\n                                    :\n                                    <Button type=\"primary\">立即订购</Button>\n                                }\n                                \n                            </span>\n                        </div>\n\n                    </div>\n                </div>\n                {/* 一个卡片菜品　截止 */}\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isLogin: state.get('isLogin')\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        addGoodsToShoppingCart: (gid) => {\n            dispatch(actionCreators.addGoodsToShoppingCart(gid))\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SingleCard) ;\n","import React, { Component } from 'react';\nimport './SingleCardMain.css';\nimport {Pagination} from 'antd'\nimport SingleCard from './SingleCard';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\n\n\n\nclass SingleCardMain extends Component {\n\n    render() {\n        return (\n            <>\n\n                <div className=\"Cards\">\n                \n                    {this.props.homeDishesList.map((item, index) => {\n                        \n                        return (\n                            <SingleCard key={index} item={item} />\n                        )\n\n                    })}\n\n\n\n                </div>\n\n                {/* 分页 */}\n                {/* <div className=\"pagination\">\n                <div className=\"layout\">\n                    <Pagination defaultCurrent={1} pageSize={9} total={this.props.totalPage} />\n                </div>\n                </div> */}\n            </>\n        )\n    }\n\n    componentDidMount(){\n        //获取所有菜品\n        this.props.getFirstPageGoods();\n        // //获取所有的分类\n        // this.props.getAllCategories()\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        homeDishesList: state.get('homeDishesList'),\n        totalPage:state.get('totalPage')\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        getFirstPageGoods:() => {\n            dispatch(actionCreators.getFirstPageGoods())\n        },\n        // //获取所有的类别\n        // getAllCategories: () => {\n        //     dispatch(actionCreators.getAllCategories())\n        // }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (SingleCardMain);","import React,{Component} from 'react'\nimport './Footer.css'\nclass Footer extends Component{\n    render(){\n        return (\n            <div className=\"footer\">\n                <div>闲驴二手平台 http://www.xianlv.hooc.top</div>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React,{Component} from 'react';\nimport RotationChart from '../Components/Home/RotationChart ';\nimport Classification from '../Components/Home/Classification';\nimport SingleCardMain from '../Components/Home/SingleCardMain'\nimport Footer from '../Components/common/Footer'\nimport {Row,Col} from 'antd';\nclass Home extends Component{\n\n    render(){\n        return (\n            <>\n            {/* 采用antd栅格布局 */}\n            <Row type=\"flex\" justify=\"center\" >\n                <br/>\n                {/* banner栏 */}\n                <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                    {/* 轮播图 */}\n                    <RotationChart />\n\n                    <Col xs={6} sm={6} md={6} lg={6} xl={4}>\n                       <Classification />\n                    </Col>\n                    <Col xs={18} sm={18} md={18} lg={18} xl={20}>\n                        {/* 卡片组 */}\n                        <SingleCardMain />\n                    </Col>\n                  \n                    {/* 页脚 */}\n                    <Footer/>\n                </Col>\n            </Row>\n            </>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport './CommonBanner.css';\nexport default class CommonBanner extends Component {\n    render() {\n        return (\n            <div>\n                 <div className=\"commonBannerMain\">\n                    <div className=\"commonBannerMainTitle\">{this.props.commonbannerTitle}</div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Checkbox,InputNumber,Icon} from 'antd';\nimport './SingleFoodlist.css';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\n\nclass SingleFoodlist extends Component {\n    state={\n        unitTotleValue : 0,\n    }\n    onChange=(e)=> {\n        console.log(`checked = ${e.target.checked}`);\n    }\n    // 改变数量按钮\n    changeMount = (mountValue,gid)=>{\n       \n        console.log(mountValue,gid);\n        this.props.changeShoppingCartGoodsMount(mountValue,gid)\n        \n    }\n    deleteShoppingCart(gid){\n        console.log('deleteShoppingCart',gid);\n        this.props.deleteShoppingCart(gid);\n    }\n    render() {\n        return (\n            <>\n                {/* 一个菜品 */}\n                <div className=\"content_area\">\n\n                    <div className=\"single_foods\">\n                        <span className=\"choose\">\n                            {/* <Checkbox onChange={this.onChange}></Checkbox> */}\n                        </span>\n                        <span className=\"food\">\n\n                            <img src={\"http://120.79.56.242:8080/\"+this.props.item.path} alt='/' />\n                        <span className=\"food_name\">{this.props.item.name}</span>\n                        </span>\n                        <span className=\"unitprice\">{this.props.item.price}</span>\n                        <span className=\"mount\">\n                            <InputNumber\n                                min={1}\n                                max={this.props.item.goodssum}\n                                defaultValue={this.props.item.shoppingsum}\n                                onChange={(value)=>this.changeMount(value,this.props.item.gid)}\n                            />\n                        </span>\n                        <span className=\"money\">\n                            <span className=\"howmuch\">￥{this.props.item.price*this.props.item.shoppingsum}</span>\n                        </span>\n                        <span onClick={()=>this.deleteShoppingCart(this.props.item.gid)} className=\"option\" >\n                            <Icon  type=\"close\" />\n                        </span>\n                    </div>\n                </div>\n                {/* 一个菜品结束 */}\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        prop: state.prop\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        deleteShoppingCart: (gid) => {\n            dispatch(actionCreators.deleteShoppingCart(gid))\n        },\n        changeShoppingCartGoodsMount:(mount,gid)=>{\n            dispatch(actionCreators.changeShoppingCartGoodsMount(mount,gid))\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SingleFoodlist) ","import React, { Component } from 'react'\nimport './ShoppingCartMain.css';\nimport {Button} from 'antd';\nimport SingleFoodlist from './SingleFoodlist';\n\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\nclass ShoppingCartMain extends Component {\n   \n    \n    componentDidMount(){\n        this.props.getMyShoppingCart();\n    }\n    render() {\n        return (\n            <>\n                <div className=\"shoppingcartPage\">\n                    <div className=\"shoppingcartmain\">\n                        {/* 当购物车为空 */}\n                        {/* <div className=\"shoppingcart_empty\"><span>购物车空空如也</span></div> */}\n                        {/* 购物车头部 */}\n                        <div className=\"shoppingcart_header\">\n                            <span className=\"choose\">\n                                \n                            </span>\n                            <span className=\"food\">商品</span>\n                            <span className=\"unitprice\">单价</span>\n                            <span className=\"mount\">数量</span>\n                            <span className=\"money\">金额</span>\n                            <span className=\"option\">操作</span>\n                        </div>\n\n                        {/* 菜品内容区域 */}\n                        <div className=\"shoppingcart_content\">\n                        {\n                            this.props.shoppingCartGoods.map((item, index) => {\n                                // console.log(item);\n                                \n                                return (\n                                    // console.log(item,index)\n                                    \n                                    <SingleFoodlist key={index} item={item} />\n                                    // <GoodList item={item} key={index} refresh={this.refresh.bind(this)}/>\n                                )\n                            })\n                        }\n                         \n                        </div>\n                        {/* 购物车页脚 */}\n                        <div className=\"shoppingcart_footer\">\n                            <div className=\"footer_area\">\n                                <span className=\"footer_btn\">\n                                    <Button size=\"large\" type=\"primary\">去结算</Button>\n                                </span>\n                                <span className=\"footer_money\">\n                                    总计金额:\n                                    <span className=\"money_value\">\n                                       ￥{this.props.shoppingCartTotalPrice}\n                                    </span>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        shoppingCartGoods: state.get('shoppingCartGoods'),\n        shoppingCartTotalPrice:state.get('shoppingCartTotalPrice')\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        getMyShoppingCart: () => {\n            dispatch(actionCreators.getMyShoppingCart())\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ShoppingCartMain);","import React, { Component } from 'react'\nimport Footer from '../Components/common/Footer'\nimport { Row, Col } from 'antd';\nimport CommonBanner from '../Components/common/CommonBanner';\nimport ShoppingCartMain from '../Components/ShoppingCart/ShoppingCartMain'\nexport default class ShoppingCart extends Component {\n    render() {\n        return (\n            <>\n                <Row type=\"flex\" justify=\"center\" >\n                    {/* banner栏 */}\n                    <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                        <CommonBanner commonbannerTitle=\"我的购物车\"/>\n                        {/* 购物车 */}\n                        <ShoppingCartMain/>\n                        {/* 页脚 */}\n                        <Footer />\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './ForgetPasswordMain.css';\nimport './ForgetPasswordMain.m.css';\nexport default class ForgetPasswordMain extends Component {\n    render() {\n        return (\n            <>\n                <div className=\"forgetPassword_main\">\n                    <div className=\"forgetPassword_area\">\n                            \n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport CommonBanner from '../Components/common/CommonBanner';\nimport ForgetPasswordMain from '../Components/ForgetPassword/ForgetPasswordMain'\nimport {Row,Col} from 'antd';\nimport Footer from '../Components/common/Footer';\nexport default class ForgetPassword extends Component {\n    render() {\n        return (\n            <>\n                  <Row type=\"flex\" justify=\"center\" >\n                    {/* banner栏 */}\n                    <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                        <CommonBanner commonbannerTitle=\"找回密码\"/>\n                        {/* 找回密码组件 */}\n                        <ForgetPasswordMain/>\n                        {/* 页脚 */}\n                        <Footer />\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './SingleFoodMessage.css';\nimport './SingleFoodMessage.m.css';\nimport { Button, Input } from 'antd';\nconst { TextArea } = Input;\n\nexport default class SingleFoodMessage extends Component {\n\n    render() {\n        return (\n            <>\n                <div className=\"single_food_main\">\n                    {/* 菜品信息区域 */}\n                    <div className=\"food_message_area\">\n                        <span className=\"food_pic\">\n                            <img src={\"http://120.79.56.242:8080/\" + this.props.goods.path} />\n                        </span>\n                        <span className=\"food_message\">\n                            <div className=\"food_name\">{this.props.goods.name}</div>\n                            <div className=\"user_star\">类型：{this.props.goods.type}</div>\n                            <div className=\"user_star\">剩余：{this.props.goods.sum}</div>\n                            <div className=\"food_details\">{this.props.goods.beizhu}</div>\n                            <div className=\"unit_price_and_btn\">\n\n                                <span className=\"unit_price\">{this.props.goods.price}元</span>\n                                <span className=\"unit_btn\"><Button type=\"primary\" size=\"large\">加入购物车</Button></span>\n\n                            </div>\n                        </span>\n\n                    </div>\n\n\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Footer from '../Components/common/Footer';\nimport { Row, Col } from 'antd';\nimport CommonBanner from '../Components/common/CommonBanner';\nimport SingleFoodMessage from '../Components/SingleFoodDetails/SingleFoodMessage';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../store/actionCreator';\nclass SingleFoodDetails extends Component {\n\n    componentDidMount(){\n        const gid = this.props.match.params.gid;\n        this.props.showGoodsDetail(gid);\n    }\n    render() {\n        return (\n            <>\n                <Row type=\"flex\" justify=\"center\" >\n                    {/* banner栏 */}\n                    <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                        <CommonBanner commonbannerTitle=\"商品详情\" />\n                        {/* 菜品信息 和评价信息*/}\n                        <SingleFoodMessage goods={this.props.goodsDetails}/>\n                     \n                        {/* 页脚 */}\n                        <Footer />\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        goodsDetails: state.get('goodsDetails')\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        showGoodsDetail: (gid) => {\n            dispatch(actionCreators.showGoodsDetail(gid))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (SingleFoodDetails);","import React from 'react';\nimport { Form, Modal, Input, Button } from 'antd';\nimport * as actionCreators from '../../store/actionCreator';\nimport { connect } from 'react-redux';\nfunction EditModal(props) {\n    const { getFieldDecorator } = props.form;\n    const formItemLayout = {\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 5 },\n            md: { span: 5 },\n            lg: { span: 5 },\n            xl: { span: 5 }\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 12 },\n            md: { span: 16 },\n            lg: { span: 16 },\n            xl: { span: 16 }\n        },\n    };\n    //以下方法为添加按钮modal事件\n\n    const editModalCancel = () => {\n        props.cancelAddClassifyModal()\n    }\n\n    //提交表单\n    const handleSubmit = e => {\n\n        e.preventDefault();\n        props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                props.editMeMessage(values)\n            }\n        });\n    };\n\n    return (\n        <Modal\n            title=\"编辑个人信息\"\n            visible={props.meMessageEditModalState}\n            onCancel={editModalCancel}\n            footer={null}\n        >\n            <Form {...formItemLayout} onSubmit={handleSubmit}>\n                <Form.Item\n                    label=\"更改手机号\"\n                >\n                    {getFieldDecorator('newPhone', {\n                        rules: [{ required: true, message: '请输入手机号' }],\n                    })(\n                        <Input placeholder={props.meMessage.phone}  />\n                    )}\n                </Form.Item>\n                <Form.Item\n                    label=\"更改微信号\"\n                >\n                    {getFieldDecorator('newVx', {\n                        rules: [{ required: true, message: '请输入微信号' }],\n                    })(\n                        <Input placeholder={props.meMessage.vx} />\n                    )}\n                </Form.Item>\n\n                <Form.Item\n                    label=\"更改QQ号\"\n                >\n                    {getFieldDecorator('newQQ', {\n                        rules: [{ required: true, message: '请输入QQ号' }],\n                    })(\n                        <Input placeholder={props.meMessage.qq}/>\n                    )}\n                </Form.Item>\n\n\n                <Form.Item\n                    label=\"更改密码\"\n                >\n                    {getFieldDecorator('newPassword', {\n                        rules: [{ required: true, message: '请输入新密码' }],\n                    })(\n                        <Input.Password placeholder=\"请输入新密码\"  />\n                    )}\n                </Form.Item>\n\n\n                <div className=\"submit_button\">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        提交\n                    </Button>\n                </div>\n            </Form>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        meMessageEditModalState: state.get('meMessageEditModalState'),\n        meMessage: state.get('meMessage')\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        cancelAddClassifyModal: () => {\n            dispatch(actionCreators.cancelMeMessageEditModal())\n        },\n        editMeMessage: (MeObj) => {\n            dispatch(actionCreators.editMeMessage(MeObj))\n        }\n    }\n}\n\nconst EditMeMessageModal = Form.create({ name: 'add_form' })(EditModal);\nexport default connect(mapStateToProps, mapDispatchToProps)(EditMeMessageModal);","import React, { Component } from 'react'\nimport './Me.css';\nimport { Button } from 'antd';\nimport EditModal from './EditMeModal';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\n\nclass Me extends Component {\n\n    \n    render() {\n        const me = this.props.meMessage\n        const showEditMeMessageModal = ()=> {\n            this.props.showMeMessageEditModal();\n        }\n        return (\n            <>\n                <div className=\"me_main\">\n                    {/* 我的信息区域 */}\n                    <div className=\"me_area\">\n                        <div className=\"me_content\">\n                        <span　className=\"head_picture\">\n                        <img src=\"https://i.loli.net/2020/02/19/fdTypGLAM3WRrsI.jpg\" alt=\"/\" />\n                        </span>\n                        <span className=\"me_message\">\n                            <div className=\"me_nickname\">{me.username}</div>\n                            <div className=\"me_sex\">手机: {me.phone}</div>\n                                <div className=\"me_username\">微信: {me.vx}</div>\n                            <div className=\"me_register_time_btn\">\n                                <span className=\"me_register_time\">Q Q: {me.qq}</span>\n                                <span className=\"me_register_btn\"><Button size=\"large\" onClick={()=>showEditMeMessageModal()}>编辑个人资料</Button></span>\n                            </div>\n                            \n                        </span>\n                        </div>\n                    </div>\n                    <EditModal />\n                    {/* 我的订单区域 */}\n                        {/* <MyOrders /> */}\n                    {/* 我的订单结束 */}\n                </div>\n            </>\n        )\n    }\n    componentDidMount(){\n        this.props.getMeMessage();\n    }\n   \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        meMessage: state.get('meMessage')\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        //获取当前用户信息\n        getMeMessage: () => {\n            dispatch(actionCreators.getMeMessage())\n        },\n        showMeMessageEditModal:() => {\n            dispatch(actionCreators.showMeMessageEditModal())\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (Me);","import React, { Component } from 'react'\nimport CommonBanner from '../Components/common/CommonBanner';\nimport {Row,Col} from 'antd';\nimport Footer from '../Components/common/Footer';\nimport Me from '../Components/UserInformation/Me';\n\nexport default class UserInformation extends Component {\n    render() {\n        return (\n            <>\n                 <Row type=\"flex\" justify=\"center\" >\n                    {/* banner栏 */}\n                    <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                        <CommonBanner commonbannerTitle=\"我的信息\"/>\n                        {/* 个人信息组件 */}\n                        <Me />\n                        {/* 页脚 */}\n                        <Footer />\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n}\n","import React from 'react'\n// import './AddNewGoodsContent.css';\nimport { Form, Input, Upload, Button, Modal, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\nimport { Link } from 'react-router-dom';\n// const { Option } = Select;\n\nclass DishesAddContent extends React.Component {\n    state = {\n        fileListLength: 0\n    }\n    //图片上传前判断只能上传一张图片\n    beforeUploadMehtod = (file) => {\n        if (this.state.fileListLength === 0) {\n            this.setState({\n                fileListLength: this.state.fileListLength + 1\n            })\n            return true\n        } else {\n            message.error('只能上传一张图片')\n            return false\n        }\n    }\n    //上传组件参数\n    uploadProps = {\n        name: 'file',\n        accept: 'image/webp,image/apng,*/*;q=0.8',\n        method: 'post',\n        action: '/api/upload',\n        listType: 'picture',\n    };\n    //上传完图片执行回调\n    onChange(info) {\n        console.log(info);\n\n        if (info.file.status !== 'uploading') { }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} 文件上传成功`);\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} 文件上传失败`);\n        }\n    }\n    //表单样式\n    formItemLayout = {\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 5 },\n            md: { span: 5 },\n            lg: { span: 5 },\n            xl: { span: 5 }\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 12 },\n            md: { span: 16 },\n            lg: { span: 16 },\n            xl: { span: 16 }\n        },\n    };\n    editModalCancel = () => {\n        this.props.cancelPublishGoodsEditModal()\n    }\n\n    //提交表单\n    handleSubmit = e => {\n\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                const gid = this.props.publiseUserChooseGoodsGid;\n                this.props.toEditGoods(values,gid);\n            }\n        });\n    };\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <>\n                <Modal\n                    title=\"编辑商品信息\"\n                    visible={this.props.showOrCancelMyPublishGoodsEditModal}\n                    onCancel={this.editModalCancel}\n                    footer={null}\n                    width={800}\n                >\n\n               \n                <div className=\"dishes_add_main\">\n                    <div className=\"dishes_add_area\">\n                        {/* <div className=\"dishes_add_title\">添加商品</div> */}\n                        <div className=\"dishes_add_content\">\n                            <Form {...this.formItemLayout} onSubmit={this.handleSubmit}>\n\n                                <Form.Item\n                                    label=\"商品名称\"\n                                >\n                                    {getFieldDecorator('goodsName', {\n                                        rules: [{ required: true, message: '请输入商品名称' }],\n                                    })(\n                                        // 菜品名\n                                        <Input />\n                                    )}\n\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"商品单价\"\n                                >\n                                    {getFieldDecorator('goodsUnitPrice', {\n                                        rules: [{ required: true, message: '请输入商品单价' }],\n                                    })(\n                                        // 菜品名\n                                        <Input />\n                                    )}\n\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"商品数量\"\n                                >\n                                    {getFieldDecorator('goodsSum', {\n                                        rules: [{ required: true, message: '请输入商品数量' }],\n                                    })(\n                                        // 菜品名\n                                        <Input />\n                                    )}\n\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"商品类别\"\n                                >\n                                    {getFieldDecorator('goodsType', {\n                                        rules: [{ required: true, message: '请输入商品类别' }],\n                                    })(\n                                        // 菜品名\n                                        <Input />\n                                    )}\n\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"商品描述\"\n                                >\n                                    {getFieldDecorator('goodsDescribe', {\n                                        rules: [{ required: true, message: '请简要描述商品信息' }],\n                                    })(\n                                        <Input.TextArea />\n                                    )}\n\n                                </Form.Item>\n\n                                <Form.Item\n                                    name=\"upload\"\n                                    label=\"商品图片\"\n                                    valuepropname=\"fileList\"\n                                    extra=\"选择图片\"\n                                >\n                                    {getFieldDecorator('dishPicture', {\n                                        rules: [{ required: true, message: '请上传商品图片' }],\n                                    })(\n                                        <Upload {...this.uploadProps}\n                                            onChange={(info) => this.onChange(info)}\n                                            beforeUpload={(file) => this.beforeUploadMehtod(file)}\n                                        >\n                                            <Button>\n                                                <UploadOutlined /> 点击上传\n                                                    </Button>\n                                        </Upload>\n                                    )}\n\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\" \"\n                                >\n\n                                    <div className=\"submit_button\">\n                                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\">\n                                            提交\n                                            </Button>\n                                    </div>\n\n                                </Form.Item>\n\n                            </Form>\n\n                        </div>\n                    </div>\n                    {/* </Col> */}\n                </div>\n                {/* </Row> */}\n                </Modal>\n\n            </>\n        );\n    }\n   \n}\n\nconst DishesAddContentForm = Form.create({ name: 'normal_login' })(DishesAddContent);\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        showOrCancelMyPublishGoodsEditModal:state.get('showOrCancelMyPublishGoodsEditModal'),\n        publiseUserChooseGoodsGid:state.get('publiseUserChooseGoodsGid')\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        cancelPublishGoodsEditModal:()=>{\n            dispatch(actionCreators.cancelPublishGoodsEditModal())\n        },\n        toEditGoods: (addFormObj,gid) => {\n            dispatch(actionCreators.editPublishGoods(addFormObj,gid))\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DishesAddContentForm);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {Button} from 'antd';\nimport {Link} from 'react-router-dom';\nimport EditPublishGoodsModal from './EditPublishGoodsModal';\nimport * as actionCreators from '../../store/actionCreator';\nimport './MyPublishOrder.css';\nclass MyPublishOrder extends Component {\n    deleteGoodsItem(gid){\n        console.log('deleteGoodItem',gid);\n        this.props.deleteGoodsItem(gid)\n    }\n    editGoodsItem(gid){\n        this.props.saveUserChooseEditGoodsGid(gid)\n        this.props.showPublishGoodsEditModal()\n        console.log('editGoodsItem',gid);\n        // this.props.editGoodsItem(gid)\n    }\n    render() {\n        return (\n            <>\n                <div className=\"myorder_area\" style={{minHeight:\"35rem\"}}>\n                    {/* 订单为空时 */}\n                    {/* <div className=\"myorder_empty\">\n                        <div className=\"empty_text\">订单当前为空，赶快下单吧！</div>\n                    </div> */}\n                    {/* 订单不为空时开始 */}\n                    <div className=\"myorder_content\">\n                        {/* 该区域名 */}\n                        <div className=\"myorder_title\" style={{textAlign:\"right\"}}>\n                            <Link to=\"/addNewGoods\">\n                            <Button type=\"primary\">添加新的商品</Button>\n                            </Link>\n                            \n\n                        </div>\n\n                        {\n                            this.props.myPublishGoodsList.map((item,index) => {\n                                return (\n                                    <>\n                                        {/* 一个订单 */}\n                    \n                                        <div className=\"single_order\" key={item.gid}>\n                                            {/* 图片 */}\n                                            <span className=\"order_food_picture\">\n                                                <img src={\"http://120.79.56.242:8080/\"+item.path}/>\n                                                {/* <img src=\"http://120.79.56.242:8080/{item.path}\" alt=\"\" /> */}\n                                            </span>\n                                            <div className=\"order_other_things\">\n                                                {/* 名称时间数量 */}\n                                                <span className=\"order_message\">\n                                                    <div className=\"single_order_name\">{item.name}</div>\n                                                    <div className=\"single_order_time\">类型: {item.type}</div>\n                                                    <div className=\"single_order_mount\">数量: {item.sum}</div>\n                                                </span>\n                                                {/* 总价 */}\n                                                <span className=\"order_total_price\">\n                                                    总价: ￥{item.price}\n                                                </span>\n                                                {/* 状态 */}\n                                                <span className=\"order_status\">\n                                                <Button onClick={()=>this.editGoodsItem(item.gid)} size=\"small\" style={{ marginRight: \"1rem\" }}>编辑</Button>\n                                                <Button onClick={()=>this.deleteGoodsItem(item.gid)} size=\"small\" type=\"danger\">删除</Button>\n                                                </span>\n                                            </div>\n\n                                        </div>\n                                        {/* 一个订单结束 */}\n                                    </>\n\n                                )\n                            })\n                        }\n\n\n                    \n\n\n                    </div>\n                    {/* 订单不为空时结束 */}\n                </div>\n                <EditPublishGoodsModal />\n            </>\n        )\n    }\n    componentDidMount() {\n        this.props.getMyPulishGoods()\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        myPublishGoodsList: state.get('myPublishGoodsList')\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        getMyPulishGoods: () => {\n            dispatch(actionCreators.getMyPulishGoods())\n        },\n        deleteGoodsItem:(gid) => {\n            dispatch(actionCreators.deleteGoodsItem(gid))\n        },\n        showPublishGoodsEditModal:()=>{\n            dispatch(actionCreators.showPublishGoodsEditModal())\n        },\n        editGoodsItem:(gid) => {\n            dispatch(actionCreators.editGoodsItem(gid))\n        },\n        saveUserChooseEditGoodsGid:(gid)=>{\n            dispatch(actionCreators.saveUserChooseEditGoodsGid(gid))\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPublishOrder);\n","import React, { Component } from 'react'\nimport CommonBanner from '../Components/common/CommonBanner';\nimport {Row,Col} from 'antd';\nimport Footer from '../Components/common/Footer';\nimport MyPublishOrder from '../Components/GoodsPublish/MyPublishOrder';\n\nexport default class GoodsPublish extends Component {\n    render() {\n        return (\n            <>\n                 <Row type=\"flex\" justify=\"center\" >\n                    {/* banner栏 */}\n                    <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                        <CommonBanner commonbannerTitle=\"我发布的商品\"/>\n                        {/* 个人信息组件 */}\n                        <MyPublishOrder />\n                        {/* 页脚 */}\n                        <Footer />\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n}\n","import React from 'react'\nimport './AddNewGoodsContent.css';\nimport {Form, Input, Upload, Button ,message} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport {connect}　from 'react-redux';\nimport * as actionCreators from '../../store/actionCreator';\nimport { Link } from 'react-router-dom';\n// const { Option } = Select;\n\nclass DishesAddContent extends React.Component {\n    state = {\n        fileListLength:0\n    }\n    //图片上传前判断只能上传一张图片\n    beforeUploadMehtod=(file)=>{\n        // console.log('beforeUpload');\n        // console.log(file);\n        // console.log(this.state.fileListLength);\n        if(this.state.fileListLength === 0){\n            // console.log(this);\n            this.setState({\n                fileListLength:this.state.fileListLength+1\n            })\n            // this.state.fileListLength = this.state.fileListLength+1\n            return true  \n        }else{\n            message.error('只能上传一张图片')\n            return false\n        }\n      }\n      //上传组件参数\n      uploadProps = {\n        name: 'file',\n        accept: 'image/webp,image/apng,*/*;q=0.8',\n        method: 'post',\n        action: '/api/upload',\n        listType:'picture',\n        // headers: {\n        //    'Content-Type':'multipart/form-data',\n        // },\n    };\n    //上传完图片执行回调\n    onChange(info) {\n        console.log(info);\n        \n        if (info.file.status !== 'uploading') {}\n        if (info.file.status === 'done') {\n            // console.log(info.file, info.fileList);\n            console.log('从这开始打印success');\n            console.log(info.file)\n        //   this.props.getResponseOfPicURL(info.file.response.data);\n          message.success(`${info.file.name} 文件上传成功`);\n        } else if (info.file.status === 'error') {\n          message.error(`${info.file.name} 文件上传失败`);\n        }\n    }\n    //表单样式\n    formItemLayout = {\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 5 },\n            md: { span: 5 },\n            lg: { span: 5 },\n            xl: { span: 5 }\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 12 },\n            md: { span: 16 },\n            lg: { span: 16 },\n            xl: { span: 16 }\n        },\n    };\n    //提交表单\n    handleSubmit = e => {\n\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                \n                this.props.toAddGoods(values);\n            }\n        });\n    };\n\n    // normFile = e => {\n    //     console.log('Upload event:', e);\n    //     if (Array.isArray(e)) {\n    //         return e;\n    //     }\n    //     return e && e.fileList;\n    // };\n    //下拉框选择\n    // handleChange=(value) =>{\n        // console.log(`selected ${value}`);\n    // }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        \n        return (\n            <>\n                {/* <Row type=\"flex\" > */}\n                    <div className=\"dishes_add_main\">\n                        {/* <Col xs={0} sm={0} md={4} lg={6} xl={6}></Col>\n                        <Col xs={24} sm={24} md={16} lg={10} xl={10}> */}\n                            <div className=\"dishes_add_area\">\n                                <div className=\"dishes_add_title\">添加商品</div>\n                                <div className=\"dishes_add_content\">\n                                    <Form {...this.formItemLayout} onSubmit={this.handleSubmit}>\n                                        \n                                        <Form.Item\n                                            label=\"商品名称\"\n                                        >\n                                            {getFieldDecorator('goodsName', {\n                                                rules: [{ required: true, message: '请输入商品名称' }],\n                                            })(\n                                                // 菜品名\n                                                <Input />\n                                            )}\n\n                                        </Form.Item>\n                                        <Form.Item\n                                            label=\"商品单价\"\n                                        >\n                                            {getFieldDecorator('goodsUnitPrice', {\n                                                rules: [{ required: true, message: '请输入商品单价' }],\n                                            })(\n                                                // 菜品名\n                                                <Input />\n                                            )}\n\n                                        </Form.Item>\n                                        <Form.Item\n                                            label=\"商品数量\"\n                                        >\n                                            {getFieldDecorator('goodsSum', {\n                                                rules: [{ required: true, message: '请输入商品数量' }],\n                                            })(\n                                                // 菜品名\n                                                <Input />\n                                            )}\n\n                                        </Form.Item>\n                                    \n                                        <Form.Item\n                                            label=\"商品类别\"\n                                        >\n                                            {getFieldDecorator('goodsType', {\n                                                rules: [{ required: true, message: '请输入商品类别' }],\n                                            })(\n                                                // 菜品名\n                                                <Input />\n                                            )}\n\n                                        </Form.Item>\n                                        \n                                        {/* <Form.Item\n                                            label=\"商品类型\"\n                                        >\n                                            {getFieldDecorator('goodsType', {\n                                                rules: [{ required: true, message: '请选择商品类型' }],\n                                            })(\n                                                <Select\n                                                 onChange={this.handleChange}>\n                                                {\n                                                    this.props.dishesCategoriesList.map((item,index)=>{\n                                                        return (\n                                                            <Option key={index} value={item.name}>{item.name}</Option>\n                                                        )\n                                                    })\n                                                }\n                                               \n                                            </Select>\n                                             )}\n\n                                        </Form.Item> */}\n                                        <Form.Item\n                                            label=\"商品描述\"\n                                        >\n                                            {getFieldDecorator('goodsDescribe', {\n                                                rules: [{ required: true, message: '请简要描述商品信息' }],\n                                            })(\n                                                <Input.TextArea />\n                                            )}\n\n                                        </Form.Item>\n\n                                   \n\n\n                                        <Form.Item\n                                            name=\"upload\"\n                                            label=\"商品图片\"\n                                            valuepropname=\"fileList\"\n                                            // getvaluefromevent={this.normFile}\n                                            extra=\"选择图片\"\n                                        >\n                                            {getFieldDecorator('dishPicture', {\n                                                rules: [{ required: true, message: '请上传商品图片' }],\n                                            })(\n                                                <Upload {...this.uploadProps}\n                                                onChange={(info)=>this.onChange(info)}\n                                                beforeUpload={(file)=>this.beforeUploadMehtod(file)}\n                                                >\n                                                    <Button>\n                                                        <UploadOutlined /> 点击上传\n                                                    </Button>\n                                                </Upload>\n                                            )}\n\n                                        </Form.Item>\n\n                                        <Form.Item\n                                         label=\" \"\n                                        >\n                                           \n                                            <div className=\"submit_button\">\n                                            <Link to=\"/publish\">\n                                            <Button size=\"large\" style={{marginRight:\"1rem\"}}>返回</Button>\n                                            </Link>\n                                            <Button　size=\"large\" type=\"primary\" htmlType=\"submit\">\n                                                提交\n                                            </Button>\n                                            </div>\n                                            \n                                        </Form.Item>\n\n                                    </Form>\n\n                                </div>\n                            </div>\n                        {/* </Col> */}\n                    </div>\n                {/* </Row> */}\n\n            </>\n        );\n    }\n    componentDidMount(){\n        this.props.getDishesCategories();\n    }\n}\n\nconst DishesAddContentForm = Form.create({ name: 'normal_login' })(DishesAddContent);\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        dishesCategoriesList: state.get('dishesCategoriesList'),\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        getDishesCategories: () => {\n            dispatch(actionCreators.getAllCategories())\n        },\n        toAddGoods:(addFormObj) => {\n            dispatch(actionCreators.addGoods(addFormObj))\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(DishesAddContentForm) ;","import React, { Component } from 'react'\nimport CommonBanner from '../Components/common/CommonBanner';\nimport {Row,Col} from 'antd';\nimport Footer from '../Components/common/Footer';\nimport AddNewGoodsContent from '../Components/AddNewGoods/AddNewGoodsContent';\n// import AddNewGoodsOther from '../Components/AddNewGoods/AddNewGoodsOther';\n// const { Content } = Layout;\n\nclass AddNewGoods extends Component {\n\n  render() {\n\n    return (\n        <>\n             <Row type=\"flex\" justify=\"center\" >\n                {/* banner栏 */}\n                <Col xs={24} sm={24} md={16} lg={19} xl={16}>\n                    <CommonBanner commonbannerTitle=\"添加新商品\"/>\n                 \n                        <AddNewGoodsContent/>\n                    {/* 页脚 */}\n                    <Footer />\n                </Col>\n            </Row>\n        </>\n    )\n   \n  }\n}\nexport default AddNewGoods;\n\n\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/common/Header';\nimport Home from './Page/Home';\nimport ShoppingCart from './Page/ShoppingCart';\nimport ForgetPassword from './Page/ForgetPassword';\nimport SingleFoodDetails from './Page/SingleFoodDetails';\nimport UserInformation from './Page/UserInformation';\nimport GoodsPublish from './Page/GoodsPublish';\nimport AddNewGoods from './Page/AddNewGoods';\nimport { HashRouter, Route, Redirect } from 'react-router-dom';\nimport { message } from 'antd';\n// import { HashRouter, Route, Redirect } from 'react-router-dom';\nfunction App() {\n  const isLogin = sessionStorage.getItem('isLogin');\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Route path='/' component={Header}></Route>\n        <Route path='/' exact component={Home} ></Route>\n        <Route path='/forget' exact component={ForgetPassword}></Route>\n        <Route path='/foodDetail/:gid' exact component={SingleFoodDetails}></Route>\n        {/* 判断是否登录 */}\n        <Route exact path=\"/shoppingCart\" render={\n          () => {\n            if (isLogin) {\n              return (\n                <ShoppingCart />\n              )\n            } else {\n              message.warning('请登录后查看')\n              return (\n                <Redirect to=\"/\" />\n              )\n            }\n          }} />\n\n        <Route exact path=\"/me\" render={\n          () => {\n            if (isLogin) {\n              return (\n                <UserInformation />\n              )\n            } else {\n              message.warning('请登录后查看')\n              return (\n                <Redirect to=\"/\" />\n              )\n            }\n          }} />\n\n        <Route exact path=\"/publish\" render={\n          () => {\n            if (isLogin) {\n              return (\n                <GoodsPublish />\n              )\n            } else {\n              message.warning('请登录后查看')\n              return (\n                <Redirect to=\"/\" />\n              )\n            }\n          }} />\n\n        <Route exact path=\"/addNewGoods\" render={\n          () => {\n            if (isLogin) {\n              return (\n                <AddNewGoods />\n              )\n            } else {\n              message.warning('请登录后查看')\n              return (\n                <Redirect to=\"/\" />\n              )\n            }\n          }} />\n\n\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes'\n\nconst defaultState = fromJS({\n    isAdmin: false,\n    modalVisible: false,\n    showRegisterOrLoginMain: false,\n    allowSendCode: true,\n    isLogin: false,\n    token: '',\n    dishesCategoriesList: [],\n    adminSiderSelectedState: '1',\n    classifyAddModalShowOrCancel: false,\n    homeDishesList: [],\n    meMessage: [],\n    meMessageEditModalState: false,\n    myPublishGoodsList:[],\n    showOrCancelMyPublishGoodsEditModal:false,\n    publiseUserChooseGoodsGid:null,\n    totalPage:1,\n    shoppingCartGoods:[],\n    goodsDetails:{},\n    shoppingCartTotalPrice:0,\n});\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        //欢迎界面保存是否是管理员状态\n        case actionTypes.WELCOME_IS_ADMIN_TO_TRUE:\n            return state.set('isAdmin', true);\n        case actionTypes.WELCOME_IS_ADMIN_TO_FALSE:\n            return state.set('isAdmin', false);\n        // 打开登录注册弹窗\n        case actionTypes.SHOW_MODAL:\n            return state.set('modalVisible', true);\n        // 关闭登录注册弹窗\n        case actionTypes.CANCEL_MODAL:\n            return state.set('modalVisible', false);\n        case actionTypes.TO_REGISTER_MAIN:\n            return state.set('showRegisterOrLoginMain', true);\n        case actionTypes.TO_LOGIN_MAIN:\n            return state.set('showRegisterOrLoginMain', false);\n        case actionTypes.CHANGE_GETCODE_BTN_TO_TRUE:\n            return state.set('allowSendCode', true);\n        case actionTypes.CHANGE_GETCODE_BTN_TO_FALSE:\n            return state.set('allowSendCode', false);\n        case actionTypes.LOGIN_SUCCESS_SAVE_STATE:\n            return state.merge({\n                'isLogin': true,\n                'token': action.data,\n            });\n        case actionTypes.TO_LOGIN_OUT:\n            return state.merge({\n                'isLogin': false,\n                'token': ''\n            })\n        // 获取主页分类列表\n        case actionTypes.GET_ALL_CATEGORIES:\n            return state.set('dishesCategoriesList', action.data);\n        case actionTypes.CHANGE_ADMIN_SIDER_STATE:\n            return state.set('adminSiderSelectedState', action.data + '');\n        case actionTypes.CLASSIFY_SHOW_ADD_MODAL:\n            return state.set('classifyAddModalShowOrCancel', true)\n        case actionTypes.CLASSIFY_CANCEL_ADD_MODAL:\n            return state.set('classifyAddModalShowOrCancel', false);\n        case actionTypes.HOME_DISHES_LIST:\n            return state.set('homeDishesList', action.data);\n\n        //保存用户信息\n        case actionTypes.GET_ME_MESSAGE:\n            return state.set('meMessage', action.data);\n\n        case actionTypes.SHOW_ME_MESSAGE_EDIT_MODAL:\n            return state.set('meMessageEditModalState', true)\n        case actionTypes.CANCAL_ME_MESSAGE_EDIT_MODAL:\n            return state.set('meMessageEditModalState', false)\n        case actionTypes.MY_PUBLISH_GOODS:\n            return state.set('myPublishGoodsList',action.data)\n        //显示或者关闭我发布的商品编辑Modal框\n        case actionTypes.SHOW_PUBLISH_GOODS_EDIT_MODAL:\n            return state.set('showOrCancelMyPublishGoodsEditModal',true)\n        case actionTypes.CANCEL_PUBLISH_GOODS_EDIT_MODAL:\n            return state.set('showOrCancelMyPublishGoodsEditModal',false);\n        //当用户点击我的发布的商品编辑时，保存商品gid\n        case actionTypes.SAVE_USER_CHOOSE_EDIT_GOODS_GID:\n            return state.set('publiseUserChooseGoodsGid',action.data);\n        case actionTypes.TOTAL_PAGE:\n            return state.set('totalPage',action.data);\n        case actionTypes.SHOPPING_CART_GOODS:\n            return state.set('shoppingCartGoods',action.data);\n        case actionTypes.GOODS_DETAILS:\n            return state.set('goodsDetails',action.data);\n        case actionTypes.SHOPPING_CART_TOTAL_PRICE:\n            return state.set('shoppingCartTotalPrice',action.data);\n        default:\n            return state;\n    }\n\n\n}\n","import { createStore,compose,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer  from './reducer';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer,composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}